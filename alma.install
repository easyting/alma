<?php

// Installation and update hooks for Openruth.

/**
 * Implements hook_update_N.
 * update system table set alma weight=10
 * to ensure form_alter hooks are called AFTER ding_user and ding_provider
 */


function alma_update_7001() {
  $num_upd = db_update('system')
    ->fields(array(
      'weight' => 10,
    ))
    ->condition('name', 'alma', '=')
    ->execute();

  echo $num_upd;
  return t('system weight for alma updated to 10');
}

/**
 * Expands the limit length for the phone field.
 */
function alma_update_7002() {
  field_cache_clear();
  $field_name = 'field_alma_mobile_phone';

  // Get the current settings
  $result = db_query('SELECT data FROM {field_config} WHERE field_name = :name', array(':name' => $field_name))->fetchField();

  // Change the settings
  $data = unserialize($result);
  $data['settings']['max_length'] = '255';

  // Write settings back to the database.
  db_update('field_config')
    ->fields(array('data' => serialize($data)))
    ->condition('field_name', $field_name)
    ->execute();

  $definition = array(
    'type' => 'varchar',
    'length' => 255,
  );

  $col_name = $field_name. '_value';

  // Fetch existing data.
  $rows = db_select("field_data_$field_name", 'f')
    ->fields('f')
    ->execute();

  // Reset value.
  db_update("field_data_$field_name")
    ->fields(array(
        $col_name => NULL,
      ))
    ->execute();

  // Change schema.
  db_change_field(
    "field_data_$field_name",
    $col_name,
    $col_name,
    $definition
  );

  // Restore data.
  foreach ($rows as $row) {
    db_update("field_data_$field_name")
      ->fields(array(
          $col_name => $row->$col_name,
        ))
      ->condition('entity_id', $row->entity_id, '=')
      ->condition('revision_id', $row->revision_id, '=')
      ->condition('language', $row->language, '=')
      ->condition('deleted', $row->deleted, '=')
      ->condition('delta', $row->delta, '=')
      ->execute();
  }

  // Fetch existing data.
  $rows = db_select("field_revision_$field_name", 'f')
    ->fields('f')
    ->execute();

  // Reset value.
  db_update("field_revision_$field_name")
    ->fields(array(
        $col_name => NULL,
      ))
    ->execute();

  db_change_field(
    "field_revision_$field_name",
    $col_name,
    $col_name,
    $definition
  );

  // Restore data.
  foreach ($rows as $row) {
    db_update("field_revision_$field_name")
      ->fields(array(
          $col_name => $row->$col_name,
        ))
      ->condition('entity_id', $row->entity_id, '=')
      ->condition('revision_id', $row->revision_id, '=')
      ->condition('language', $row->language, '=')
      ->condition('deleted', $row->deleted, '=')
      ->condition('delta', $row->delta, '=')
      ->execute();
  }

  field_cache_clear();
}
